<Activity mc:Ignorable="sap sap2010" x:Class="Regex_ExtraherenGegevens" this:Regex_ExtraherenGegevens.TabbladRegexWaarden="Regex" this:Regex_ExtraherenGegevens.BestandsnaamRegexWaarden="Data\Config.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary&lt;String, String&gt; die door de hele workflow heen gaat." Name="GeextraheerdeGegevens" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Bevat de tekst die geëxtraheerd moet worden" Name="TeExtraherenTekst" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Bevat de naam van het tabblad waarmee de tekst geëxtraheerd moet worden" Name="TabbladRegexWaarden" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Bevat de volledige bestandsnaam inclusief pad naar het bestand met de regex waarden" Name="BestandsnaamRegexWaarden" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Bevat een opsomming van verplichte gegevens die niet in de tekst zijn gevonden" Name="MissendeGegevens" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1060,3753</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EmailOphalen_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Omschrijving:&#xA;-De benodigde gegevens worden uit de tekst gehaald&#xA;-Er wordt aangegeven of de definitie succesvol is uitgevoerd&#xA;&#xA;Pre: &#xA;De verplichte input is Required&#xA;&#xA;&#xA;Post: &#xA;Minstens 1 van de onderste Arguments moet gevuld zijn&#xA;-GeextraheerdeGegevens &#xA;-MissendeVerplichteGegevens " DisplayName="RegexExtraheren" sap:VirtualizedContainerService.HintSize="1050,3688" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Bevat de gegevens uit het RegexWaarden excel bestand" Name="dtRegexWaarden" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" sap2010:Annotation.AnnotationText="Bevat de gevonden Regex Matches" Name="ienResultaat" />
      <Variable x:TypeArguments="scg:List(x:String)" sap2010:Annotation.AnnotationText="Lijst met alle gevonden uitval" Default="[new list(Of String)]" Name="lstUitval" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Start RegexExtraheren" sap:VirtualizedContainerService.HintSize="988,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start RegexExtraheren&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Input wordt afgedwongen in properties" DisplayName="Preconditie" sap:VirtualizedContainerService.HintSize="988,134" sap2010:WorkflowViewState.IdRef="Sequence_40">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Stappen: &#xA;De gegevens worden geëxtraheerd a.d.h.v. de regex patronen in bestand &quot;RegexWaarden.xlsx&quot;&#xA;&#xA;" DisplayName="Acties" sap:VirtualizedContainerService.HintSize="988,2197" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="dtRegexWaarden vullen met RegexWaarden.xlsx" DataTable="[dtRegexWaarden]" DisplayName="Read Range Bestand RegexWaarden.xlsx" sap:VirtualizedContainerService.HintSize="926,119" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[TabbladRegexWaarden]" WorkbookPath="[BestandsnaamRegexWaarden]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <Assign sap2010:Annotation.AnnotationText="Dictionary Geextraheerde Gegevens Initialiseren" DisplayName="Dictrionary GeextraheerdeGegevens initialiseren" sap:VirtualizedContainerService.HintSize="926,113" sap2010:WorkflowViewState.IdRef="Assign_107">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[GeextraheerdeGegevens]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(of String, String)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Sequence sap2010:Annotation.AnnotationText="-Haal gegevens uit de tekst op m.b.v. Regex patronen in het regex bestand&#xA;-Schoon de gegevens" DisplayName="Haal gegevens op m.b.v. Regex patronen en schoon deze" sap:VirtualizedContainerService.HintSize="926,1237" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Index van de iteraties door de RegexWaarden" Name="intIndex" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" sap2010:Annotation.AnnotationText="Itereer door alle  regels van de datatabel dtRegexWaarden" CurrentIndex="[intIndex]" DataTable="[dtRegexWaarden]" DisplayName="For Each Row in Data Table dtRegexWaarden" sap:VirtualizedContainerService.HintSize="864,1084" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rij" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="830,867" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches FirstMatch="{x:Null}" sap2010:Annotation.AnnotationText="Hier wordt het Regex patroon van de huidige iteratie toegepast" DisplayName="Matches Regex patronen" sap:VirtualizedContainerService.HintSize="788,102" sap2010:WorkflowViewState.IdRef="Matches_19" Input="[TeExtraherenTekst]" IsBuilderTabModified="False" Pattern="[rij(&quot;Regexpatroon&quot;).ToString]" RegexOption="Compiled" Result="[ienResultaat]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Matches>
                <Flowchart DisplayName="Flowchart Gegeven gevonden" sap:VirtualizedContainerService.HintSize="788,637" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <av:Point x:Key="ShapeLocation">330,2.5</av:Point>
                      <av:Size x:Key="ShapeSize">60,75</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">360,77.5 360,107.5 357.5,107.5 357.5,127.5</av:PointCollection>
                      <x:Double x:Key="Width">753.5</x:Double>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Flowchart.StartNode>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </Flowchart.StartNode>
                  <FlowDecision x:Name="__ReferenceID5" Condition="[ienResultaat.count &gt;0]" DisplayName="Gegeven gevonden" sap:VirtualizedContainerService.HintSize="108,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <av:Point x:Key="ShapeLocation">303.5,127.5</av:Point>
                        <av:Size x:Key="ShapeSize">108,87</av:Size>
                        <x:String x:Key="TrueLabel">Ja</x:String>
                        <x:String x:Key="FalseLabel">Nee</x:String>
                        <av:PointCollection x:Key="TrueConnector">303.5,171 250,171 250,256.5</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">411.5,171 610,171 610,226.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowDecision x:Name="__ReferenceID0" Condition="[ienResultaat.count = 1]" DisplayName="Hoeveel gegevens gevonden" sap:VirtualizedContainerService.HintSize="158,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">170,256.5</av:Point>
                            <av:Size x:Key="ShapeSize">158,87</av:Size>
                            <x:String x:Key="TrueLabel">1</x:String>
                            <x:String x:Key="FalseLabel">Meerdere</x:String>
                            <av:PointCollection x:Key="TrueConnector">170,300 100,300 100,373.5</av:PointCollection>
                            <av:PointCollection x:Key="FalseConnector">328,300 370,300 370,379.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">0,373.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,153</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="-Geextraheerd gegeven in dictionary zetten&#xA;-Geextraheerd gegeven schonen" DisplayName="1 Gegeven gevonden" sap:VirtualizedContainerService.HintSize="200,153" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap2010:Annotation.AnnotationText="Dictionary Geextraheerde gegevens wordt gevuld met het gevonden gegeven" DisplayName="Assign gevonden gegeven" sap:VirtualizedContainerService.HintSize="496,124" sap2010:WorkflowViewState.IdRef="Assign_108">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[GeextraheerdeGegevens(rij("Naam").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ienResultaat(0).Value]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Sequence DisplayName="Data schonen" sap:VirtualizedContainerService.HintSize="496,366" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap2010:Annotation.AnnotationText="Het gevonden gegeven wordt&#xA;-aan de voor- en achterkant getrimd" DisplayName="Verwijder spaties aan voor- en achterkant" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="Assign_109">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[GeextraheerdeGegevens(rij("Naam").ToString)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[GeextraheerdeGegevens(rij("Naam").ToString).Trim]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <ui:Replace sap2010:Annotation.AnnotationText="Meerdere spaties vervangen door 1 spatie" BuilderPattern=" {2,}" DisplayName="Replace meerdere spaties door 1 spatie" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[GeextraheerdeGegevens(rij(&quot;Naam&quot;).ToString)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot; {2,}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=" {2,}" RegexOption="IgnoreCase, Compiled" Replacement=" " Result="[GeextraheerdeGegevens(rij(&quot;Naam&quot;).ToString)]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:Replace>
                              </Sequence>
                            </Sequence>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">270,379.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,183</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="-Vul de GeextraheerdeGegevens Key met een lege waarde&#xA;-Voeg toe aan de uitval lijst hoeveel keer een key voorkomt in de tekst" DisplayName="Meerdere gegevens gevonden" sap:VirtualizedContainerService.HintSize="496,473" sap2010:WorkflowViewState.IdRef="Sequence_47">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap2010:Annotation.AnnotationText="De Key van het niet gevonden gegeven wordt gevuld met een lege waarde zodat de verdere verwerking van gegevens geen foutmelding geeft over de niet gevonden key" DisplayName="GeextraheerdeGegevens Key = &quot;&quot; " sap:VirtualizedContainerService.HintSize="434,139" sap2010:WorkflowViewState.IdRef="Assign_113">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[GeextraheerdeGegevens(rij("Naam").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[lstUitval]" DisplayName="Append items to lstUitval" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_1">
                                <uasc:AppendItemToCollection.Items>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                    <InArgument x:TypeArguments="x:String">[rij("Naam").ToString + " komt " + cStr(ienResultaat.Count) + " keer voor in de tekst"]</InArgument>
                                  </scg:List>
                                </uasc:AppendItemToCollection.Items>
                              </uasc:AppendItemToCollection>
                            </Sequence>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowDecision x:Name="__ReferenceID4" Condition="[rij(&quot;Verplicht&quot;).ToString = &quot;Ja&quot;]" DisplayName="Verplicht gegeven" sap:VirtualizedContainerService.HintSize="100,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">560,226.5</av:Point>
                            <av:Size x:Key="ShapeSize">100,87</av:Size>
                            <x:String x:Key="TrueLabel">Ja</x:String>
                            <x:String x:Key="FalseLabel">Nee</x:String>
                            <av:PointCollection x:Key="TrueConnector">560,270 530,270 530,341 610,341 610,371</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">510,371</av:Point>
                                <av:Size x:Key="ShapeSize">200,198</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="-Vul de GeextraheerdeGegevens key met een lege waarde&#xA;-De Key van het niet gevonden verplichte gegeven wordt toegevoegd aan de Uitval lijst" DisplayName="Voeg missende verplichte gegeven toe aan Uitval lijst" sap:VirtualizedContainerService.HintSize="200,198" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap2010:Annotation.AnnotationText="De Key van het niet gevonden gegeven wordt gevuld met een lege waarde zodat de verdere verwerking van gegevens geen foutmelding geeft over de niet gevonden key" DisplayName="GeextraheerdeGegevens Key = &quot;&quot; " sap:VirtualizedContainerService.HintSize="434,139" sap2010:WorkflowViewState.IdRef="Assign_112">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[GeextraheerdeGegevens(rij("Naam").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Lijst met uitval van verplichte velden (Voor persoon, bedrijf of beiden)" Collection="[lstUitval]" DisplayName="Add To Collection lstUitval" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="[rij(&quot;Naam&quot;).ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </AddToCollection>
                            </Sequence>
                          </FlowStep>
                        </FlowDecision.True>
                      </FlowDecision>
                    </FlowDecision.False>
                  </FlowDecision>
                  <x:Reference>__ReferenceID0</x:Reference>
                  <x:Reference>__ReferenceID1</x:Reference>
                  <x:Reference>__ReferenceID2</x:Reference>
                  <x:Reference>__ReferenceID3</x:Reference>
                  <x:Reference>__ReferenceID4</x:Reference>
                </Flowchart>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <If sap2010:Annotation.AnnotationText="ALS er uitval is in de lijst met uitval&#xA;DAN de lijst met uitval omzetten naar een puntkomma gescheiden string voor de output" Condition="[lstUitval.Count &gt;0]" DisplayName="If Uitval gevonden" sap:VirtualizedContainerService.HintSize="926,425" sap2010:WorkflowViewState.IdRef="If_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Vul Uitval met de gevonden uitvalsoorten" sap:VirtualizedContainerService.HintSize="476,201" sap2010:WorkflowViewState.IdRef="Sequence_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="De naam/namen van de gegevens die  niet gevonden zijn" DisplayName="Assign GeextraheerdeGegevens(&quot;Uitval&quot;)" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_86">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MissendeGegevens]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.join(";", lstUitval)]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="1 van de onderste Arguments moet gevuld zijn&#xA;-GeextraheerdeGegevens &#xA;-MissendeVerplichteGegevens " DisplayName="Postconditie" sap:VirtualizedContainerService.HintSize="988,612" sap2010:WorkflowViewState.IdRef="Sequence_41">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If sap2010:Annotation.AnnotationText="ALS er geen Geextraheerde Gegevens en geen uitval is&#xA;DAN een SE &quot;Geen gegevens gevonden&quot;" Condition="[GeextraheerdeGegevens.Count =0 And MissendeGegevens = &quot;&quot;]" DisplayName="If Geen GeextraheerdeGegevens en Geen uitval" sap:VirtualizedContainerService.HintSize="410,444" sap2010:WorkflowViewState.IdRef="If_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,220" sap2010:WorkflowViewState.IdRef="Sequence_42">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Throw sap2010:Annotation.AnnotationText="SE:(&quot;Er zijn geen 'Geextraheerde gegevens' en geen 'Missende verplichte gegevens' gevonden&quot;)" DisplayName="Throw SE - Geen gegevens gevonden" Exception="[New SystemException(&quot;Er zijn geen 'Geextraheerde gegevens' en geen 'Missende verplichte gegevens' gevonden&quot;)]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="Throw_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Throw>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message Eind RegexExtraheren" sap:VirtualizedContainerService.HintSize="988,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Eind RegexExtraheren&quot;]" />
  </Sequence>
</Activity>