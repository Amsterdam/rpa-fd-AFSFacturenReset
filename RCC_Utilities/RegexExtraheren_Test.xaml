<Activity mc:Ignorable="sap sap2010" x:Class="Regex_ExtraherenGegevens_Test" this:Regex_ExtraherenGegevens_Test.TeExtraherenTekst="Amsterdam, 15-01-2024&#xD;&#xA;&#xD;&#xA;Voorletters B&#xD;&#xA;Tussenvoegsels Ter&#xD;&#xA;Achternaam Bed&#xD;&#xA;&#xD;&#xA;B.Ter.Bed@Hiero.nl" this:Regex_ExtraherenGegevens_Test.BeschrijvingTest="Export definitie geextraheerd&#xA;Geen uitval" this:Regex_ExtraherenGegevens_Test.VerwachteMissendeGegevens="Geen" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Bevat de tekst die geëxtraheerd moet worden" Name="TeExtraherenTekst" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Wat wordt er getest" Name="BeschrijvingTest" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Bevat een opsomming van verplichte gegevens die niet in de tekst zijn gevonden" Name="VerwachteMissendeGegevens" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1060,2417</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Octopus_Inloggen_Test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="72">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Input:&#xA;-BestandsnaamRegexWaarden: Bevat de volledige bestandsnaam inclusief pad naar het bestand met de regex waarden&#xA;   Standaard gevuld met “Data\Config.xlsx”&#xA;-TabbladRegexWaarden: bevat de  naam van het tabblad waarmee de tekst geëxtraheerd moet worden.&#xA;    Standaard gevuld met “Regex”&#xA;-TeExtraherenTekst: Bevat de tekst die geëxtraheerd moet worden&#xA;&#xA;Output:&#xA;-MissendeVerplichteGegevens: Bevat een opsomming van verplichte gegevens die niet in de tekst zijn gevonden&#xA;-GeextraheerdeGegevens: Bevat de geextraheerde gegevens. Dit is een dictionary die meerdere keys kan bevatten.&#xA;" DisplayName="Regex_ExtraherenGegevens_Test" sap:VirtualizedContainerService.HintSize="562,2352" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Exceptie die opgeworpen is" Name="ex" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Bevat een opsomming van verplichte gegevens die niet in de tekst zijn gevonden" Name="MissendeGegevens" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:Annotation.AnnotationText="Bevat de geextraheerde gegevens. Dit is een dictionary die meerdere keys kan bevatten." Name="GeextraheerdeGegevens" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="500,103" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="500,452" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch RegexExtraheren" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RegexExtraheren.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="RCC_Utilities\RegexExtraheren.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="GeextraheerdeGegevens">
                <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="GeextraheerdeGegevens" />
              </OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TeExtraherenTekst">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="TeExtraherenTekst" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TabbladRegexWaarden">
                <Literal x:TypeArguments="x:String">Regex</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="BestandsnaamRegexWaarden">
                <Literal x:TypeArguments="x:String">Data\Config.xlsx</Literal>
              </InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="MissendeGegevens">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="MissendeGegevens" />
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Assign DisplayName="ex = exception" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[ex]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="500,1369" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message Uitgevoerde test" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;------------Uitgevoerde Test: &quot; + vbCrLf + BeschrijvingTest]" />
      <ui:LogMessage DisplayName="Log Message Controleer geextraheerde tekst" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Controleer de 'TeExtraherenTekst' en de 'GeextraheerdeGegevens' op het oog&quot;]" />
      <ui:LogMessage DisplayName="TeExtraherenTekst" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;TeExtraherenTekst: &quot; + vbCrLf + TeExtraherenTekst]" />
      <ui:LogMessage DisplayName="Geextraheerde gegevens" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;GeextraheerdeGegevens:&quot; + vbCrLf + String.Join(vbCrLf,GeextraheerdeGegevens.Select(Function(x) x.Key.ToString+&quot; = &quot;+x.Value.ToString))]" />
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" sap2010:Annotation.AnnotationText="Check of er geen exceptions waren" ContinueOnFailure="True" DisplayName="Verify Exception" Expression="[ex is Nothing]" sap:VirtualizedContainerService.HintSize="388,121" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </uta:VerifyExpression>
      <If Condition="[MissendeGegevens = &quot;&quot;]" DisplayName="If MissendeVerplichteGegevens leeg is" sap:VirtualizedContainerService.HintSize="388,373" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify MissendeGegevens" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_3" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
            <uta:VerifyExpressionWithOperator.FirstExpression>
              <InArgument x:TypeArguments="x:String">[VerwachteMissendeGegevens]</InArgument>
            </uta:VerifyExpressionWithOperator.FirstExpression>
            <uta:VerifyExpressionWithOperator.SecondExpression>
              <InArgument x:TypeArguments="x:String">["Geen"]</InArgument>
            </uta:VerifyExpressionWithOperator.SecondExpression>
          </uta:VerifyExpressionWithOperator>
        </If.Then>
        <If.Else>
          <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify MissendeGegevens gevuld" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
            <uta:VerifyExpressionWithOperator.FirstExpression>
              <InArgument x:TypeArguments="x:String">[VerwachteMissendeGegevens]</InArgument>
            </uta:VerifyExpressionWithOperator.FirstExpression>
            <uta:VerifyExpressionWithOperator.SecondExpression>
              <InArgument x:TypeArguments="x:String">[MissendeGegevens]</InArgument>
            </uta:VerifyExpressionWithOperator.SecondExpression>
          </uta:VerifyExpressionWithOperator>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>